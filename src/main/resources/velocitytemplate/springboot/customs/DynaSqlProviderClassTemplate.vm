#set($packageNameSuffix=".mapper.provider")
#set($entityPackage=$_table.packageName + ".entity." + $_table.className)
#set($dynaClassName= $_table.className +"DynaSqlProvider")
#set($dynaClassType= $dynaClassName +".class")
#set($lb="(")
#set($rb=")")
#set($primaryKey=$_table.columns.get(0))
#set($str="String")
#set($int="Integer")

#set($columnsNames="")
#set($fieldHolders="")
#set($updatePKHolders="")
#set($updateFieldHolders="")
#foreach( $column in $_table.columns)
	#if($primaryKey.fieldName.equals($column.fieldName))
		#set($updatePKHolders = $primaryKey.columnName + " = #{" + $primaryKey.fieldName + "}")
	#else
		#set($columnsNames = $columnsNames + $column.columnName+",")
		#set($fieldHolders = $fieldHolders + "#{" + $column.fieldName+ "},")
		#set($updateFieldHolders = $updateFieldHolders + $column.columnName + " = #{obj." + $column.fieldName + "},")
	#end
#end
#set($columnsNames = $columnsNames.substring(0, $columnsNames.lastIndexOf(',')))
#set($fieldHolders = $fieldHolders.substring(0, $fieldHolders.lastIndexOf(',')))
#set($updateFieldHolders = $updateFieldHolders.substring(0, $updateFieldHolders.lastIndexOf(',')))

package $_table.packageName$packageNameSuffix;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.jdbc.SQL;

import com.oneconnect.sme.foundation.utils.StringUtil;
import $entityPackage;


public class $dynaClassName {
	
	/**
	* 动态 SQL 分页查询
	*/
	#set($queryPageMethod="query"+$_table.className+"Page")
	public String $queryPageMethod(@Param("obj") $_table.className obj, @Param("orderBy") String orderBy) {
                                       
		return new SQL() {
			{
				SELECT("$primaryKey.columnName, $columnsNames");
				FROM("$_table.tableName");
				
				#foreach( $column in $_table.columns)
				
				#if($str.equals($column.javaDataType))
				
				if (!StringUtil.isNullOrBlank(obj.get$column.fieldNameHeadUpper$lb$rb)){
					WHERE("$column.columnName like #{obj.$column.fieldName}");
				
				}
				
				#elseif($int.equals($column.javaDataType))
				
				if (obj.get$column.fieldNameHeadUpper$lb$rb !=null && obj.get$column.fieldNameHeadUpper$lb$rb > 0) {
                    WHERE("$column.columnName like #{obj.$column.fieldName}");
	            }
                
                #else
                
                if (obj.get$column.fieldNameHeadUpper$lb$rb !=null ) {
                    WHERE("$column.columnName like #{obj.$column.fieldName}");
                }					
				
				#end
				#end
				
				if(!StringUtil.isNullOrBlank(orderBy)){
					ORDER_BY(orderBy);
				}				
			}
		}.toString();
	}
	
	/**
	* 动态 SQL 新增
	*/
	#set($addObjMethod="add"+$_table.className)
	#set($addObjId="SEQ_"+$_table.tableName+".nextval")
	public String $addObjMethod(@Param("obj")$_table.className obj) {
		return new SQL() {
			{
				INSERT_INTO("$_table.tableName");
				
				VALUES("id","$addObjId");
				
		#foreach( $column in $_table.columns)
			#if(!$primaryKey.fieldName.equals($column.fieldName))
				
				#if($str.equals($column.javaDataType))
				
				if (!StringUtil.isNullOrBlank(obj.get$column.fieldNameHeadUpper$lb$rb)) {
                    VALUES("$column.columnName", "#{obj.$column.fieldName}");
                }
                
                #elseif($int.equals($column.javaDataType))
				
				if (obj.get$column.fieldNameHeadUpper$lb$rb !=null && obj.get$column.fieldNameHeadUpper$lb$rb > 0) {
                    VALUES("$column.columnName", "#{obj.$column.fieldName}");
                
                }
                #else
                
                if (obj.get$column.fieldNameHeadUpper$lb$rb !=null ) {
                    VALUES("$column.columnName", "#{obj.$column.fieldName}");
                }
                
                #end
                
			#end
		#end
			
			}
		}.toString();
	}
	
	
	/**
	* 动态 SQL 修改
	*/
	#set($updateObjMethod="update"+$_table.className)
	public String $updateObjMethod(@Param("$primaryKey.fieldName") Integer $primaryKey.fieldName , @Param("obj") $_table.className obj) {
		return new SQL() {
			{
				UPDATE("$_table.tableName");
				
		#foreach( $column in $_table.columns)
			#if(!$primaryKey.fieldName.equals($column.fieldName))
				#if($str.equals($column.javaDataType))
				
				if (!StringUtil.isNullOrBlank(obj.get$column.fieldNameHeadUpper$lb$rb)) {
                    SET("$column.columnName = #{obj.$column.fieldName}");
                }
                
                #elseif($int.equals($column.javaDataType))
                
				if (obj.get$column.fieldNameHeadUpper$lb$rb !=null && obj.get$column.fieldNameHeadUpper$lb$rb > 0) {
                    SET("$column.columnName = #{obj.$column.fieldName}");
                }
                
                #else
                
				if (obj.get$column.fieldNameHeadUpper$lb$rb !=null) {
                    SET("$column.columnName = #{obj.$column.fieldName}");
                }
	           	#end
			#end
		#end
		
				WHERE("$primaryKey.columnName = #{$primaryKey.fieldName}");
			
			}
		}.toString();
	}
	
}



