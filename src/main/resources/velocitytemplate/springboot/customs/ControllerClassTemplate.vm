#set($packageNameSuffix=".controller")
#set($entityPackage=$_table.packageName + ".entity." + $_table.className)
#set($interfacePackage=$_table.packageName + ".service.I" + $_table.className + "Service")
#set($interfaceName="I" + $_table.className + "Service")
#set($instanceName= $_table.classNameHeadLower + "Service")
#set($controllerName= $_table.className + "Controller")
#set($lb="(")
#set($rb=")")
#set($primaryKey=$_table.columns.get(0))

package $_table.packageName$packageNameSuffix;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import com.github.pagehelper.Page;

import com.oneconnect.sme.foundation.entity.JsonResult;
import com.oneconnect.sme.foundation.entity.PageRequest;
import com.oneconnect.sme.foundation.entity.PageWrapper;
import $entityPackage;
import $interfacePackage;

@RestController
public class $controllerName {

	@Autowired
	private $interfaceName $instanceName ;

	private final Logger logger = LoggerFactory.getLogger(getClass());

	/**
	 * 根据主键查询
	 *
	 */
	#set($queryByPKMethod="queryByPK")
	@RequestMapping(value = "$_table.classNameHeadLower/{$primaryKey.fieldName}", method = RequestMethod.GET)
	public ResponseEntity<JsonResult<$_table.className>> $queryByPKMethod(@PathVariable(value = "$primaryKey.fieldName") $primaryKey.javaDataType $primaryKey.fieldName) {
		JsonResult<$_table.className> r = new JsonResult<$_table.className>();
		$_table.className $_table.classNameHeadLower = $instanceName.$queryByPKMethod($primaryKey.fieldName);
		r.declareSuccess($_table.classNameHeadLower );
		return ResponseEntity.ok(r);
	}

	/**
	 * 分页查询
	 *
	 */
	#set($queryPageMethod="query"+$_table.className+"Page")
	#set($requestMappingValue=$_table.classNameHeadLower+"s")
	@RequestMapping(value = "$requestMappingValue", method = RequestMethod.POST)
	public ResponseEntity<JsonResult<PageWrapper<$_table.className>>> $queryPageMethod(@RequestBody PageRequest<$_table.className> pageReq) {
		
		JsonResult<PageWrapper<$_table.className>> r = new JsonResult<PageWrapper<$_table.className>>();
		Page<$_table.className> page = $instanceName.$queryPageMethod(pageReq);		
		r.declareSuccess(new PageWrapper<$_table.className>(page));
		return ResponseEntity.ok(r);
	
	}

	/**
	 * 添加
	 *
	 */
	#set($addObjMethod="add"+$_table.className)
	@RequestMapping(value = "$_table.classNameHeadLower", method = RequestMethod.POST)
	public ResponseEntity<JsonResult<$_table.className>> $addObjMethod (@RequestBody $_table.className $_table.classNameHeadLower) {
		JsonResult<$_table.className> r = new JsonResult<$_table.className>();

		$instanceName.$addObjMethod( $_table.classNameHeadLower );
		r.declareSuccess( $_table.classNameHeadLower );
		

		return ResponseEntity.ok(r);
	}

	/**
	 * 根据主键删除
	 *
	 */
	#set($deleteObjMethod="deleteByPK")
	@RequestMapping(value = "$_table.classNameHeadLower/{$primaryKey.fieldName}", method = RequestMethod.DELETE)
	public ResponseEntity<JsonResult<Integer>> $deleteObjMethod (@PathVariable(value = "$primaryKey.fieldName") $primaryKey.javaDataType $primaryKey.fieldName) {
		JsonResult<Integer> r = new JsonResult<Integer>();
		
		r.declareSuccess($instanceName.$deleteObjMethod(id));

		return ResponseEntity.ok(r);
	}

	/**
	 * 根据主键修改信息
	 * 
	 */
	#set($updateObjMethod="update"+$_table.className)
	@RequestMapping(value = "$_table.classNameHeadLower/{$primaryKey.fieldName}", method = RequestMethod.PUT)
	public ResponseEntity<JsonResult<$_table.className>> $updateObjMethod (@PathVariable("$primaryKey.fieldName") $primaryKey.javaDataType $primaryKey.fieldName, @RequestBody $_table.className $_table.classNameHeadLower ) {
		JsonResult<$_table.className> r = new JsonResult<$_table.className>();

		$instanceName.$updateObjMethod( $primaryKey.fieldName , $_table.classNameHeadLower );
		r.declareSuccess( $_table.classNameHeadLower );
		
		return ResponseEntity.ok(r);
	}
	
}

